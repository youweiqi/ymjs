<?php

namespace common\models;

use Yii;
use common\components\Common;

/**
 * This is the model class for table "tg_link".
 *
 * @property int $id
 * @property int $channel_id 渠道id
 * @property int $promotion_detail_id
 * @property int $promotion_total_num 此链接可以发多少张券
 * @property int $promotion_person_num 每个人通过此链接领取张数
 * @property string $identifier 连接唯一标识
 * @property string $create_time
 * @property int $type 券类型 1商品券 2 品牌券
 * @property int $serial_id 期咨询id
 * @property string $memo 文案
 * @property string $update_time
 */
class TgLink extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'tg_link';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('db_goods');
    }

    public  function scenarios()
    {
        $scenarios = parent::scenarios(); // TODO: Change the autogenerated stub
        $scenarios['tg_goods'] = ['channel_id','promotion_detail_id','promotion_total_num','promotion_person_num','memo'];
        $scenarios['tg_brand'] = ['channel_id','promotion_detail_id','promotion_total_num','promotion_person_num','serial_id','memo'];
        return $scenarios;
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            //品牌圈推广
            ['promotion_detail_id', 'required', 'message' => '请选择品牌券','on' => 'tg_brand'],
            ['serial_id', 'required', 'message' => '请选择品牌期','on' => 'tg_brand'],
            //商品券推广
            ['promotion_detail_id', 'required', 'message' => '请选择商品券','on' => 'tg_goods'],

            [['promotion_detail_id', 'identifier'], 'required'],
            [['channel_id', 'promotion_detail_id', 'type', 'serial_id'], 'integer'],
            [['create_time','update_time'], 'safe'],

            [['identifier'], 'string', 'max' => 255],

            ['channel_id','required', 'message' => '请选择渠道'],
            ['memo','safe'],
            [['promotion_total_num','promotion_person_num'], 'required'],
            [['promotion_total_num','promotion_person_num'], 'integer','message'=>'必须是整数'],

        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'channel_id' => 'Channel ID',
            'promotion_detail_id' => 'Promotion Detail ID',
            'promotion_total_num' => 'Promotion Total Num',
            'promotion_person_num' => 'Promotion Person Num',
            'identifier' => 'Identifier',
            'create_time' => 'Create Time',
            'type' => 'Type',
            'serial_id' => 'Serial ID',
            'update_time' => 'Update Time',
            'memo' => 'Memo'
        ];
    }

    public function save($runValidation = true, $attributeNames = null)
    {

        if($this->isNewRecord) // 如果是新加
        {
            if($this->getScenario() == 'tg_goods')
            {
                $this->type = 1;
            }
            if($this->getScenario() == 'tg_brand')
            {
                $this->type = 2;
            }
            $this->generateIdentifier();
            $this->create_time = date('Y-m-d H-i-s');
            $this->update_time = date('Y-m-d H-i-s');
        }else{
            $this->update_time = date('Y-m-d H-i-s');
        }

        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }

    public static function DropDown($field,$value)
    {
        $dropDownList = [
            'type'=> [
                '1' => '商品券',
                '2' => '品牌券'
            ]
        ];
        return isset($dropDownList[$field])&&isset($dropDownList[$field][$value])?
            $dropDownList[$field][$value]:'其他';
    }
    public function generateIdentifier()
    {
        do{
            $key = Common::randomKey(8);
        } while (self::findOne(['identifier'=>$key]));
        $this->identifier = $key;
    }
    public function getChannel()
    {
        return $this->hasOne(TgChannel::className(),['id'=>'channel_id']);
    }
    public function getChannelArrayData()
    {
        $result =  $this->hasOne(TgChannel::className(),['id'=>'channel_id'])->select('id,name')->asArray()->one();
        return empty($result)?[]:[$result['id']=>'('.$result['id'].')'.$result['name']];
    }
    public function getPromotionDetail()
    {
        return $this->hasOne(PromotionDetail::className(),['id'=>'promotion_detail_id']);
    }
    public function getPromotionDetailArrayData()
    {
        $result = $this->hasOne(PromotionDetail::className(),['id'=>'promotion_detail_id'])->select('id,promotion_detail_name')->asArray()->one();
        return empty($result)?[]:[$result['id']=>'('.$result['id'].')'.$result['promotion_detail_name']];
    }
    public function getSerialArrayData()
    {
        $result = $this->hasOne(Serial::className(),['id'=>'serial_id'])->select('id,title')->asArray()->one();
        return empty($result)?[]:[$result['id']=>$result['title']];
    }
}
